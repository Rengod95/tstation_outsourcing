/* tslint:disable */
/* eslint-disable */
/**
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document:
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
/**
 *
 * @export
 * @interface Store
 */
export interface Store {
  /**
   *
   * @type {number}
   * @memberof Store
   */
  readonly id?: number;
  /**
   *
   * @type {string}
   * @memberof Store
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof Store
   */
  description: string;
  /**
   *
   * @type {string}
   * @memberof Store
   */
  address: string;
  /**
   *
   * @type {string}
   * @memberof Store
   */
  city: string;
  /**
   *
   * @type {string}
   * @memberof Store
   */
  operatingHours: string;
  /**
   *
   * @type {string}
   * @memberof Store
   */
  image: string;
  /**
   *
   * @type {Date}
   * @memberof Store
   */
  readonly created?: Date;
  /**
   *
   * @type {Date}
   * @memberof Store
   */
  readonly modified?: Date;
}

/**
 * Check if a given object implements the Store interface.
 */
export function instanceOfStore(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "name" in value;
  isInstance = isInstance && "description" in value;
  isInstance = isInstance && "address" in value;
  isInstance = isInstance && "city" in value;
  isInstance = isInstance && "operatingHours" in value;
  isInstance = isInstance && "image" in value;

  return isInstance;
}

export function StoreFromJSON(json: any): Store {
  return StoreFromJSONTyped(json, false);
}

export function StoreFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Store {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: !exists(json, "id") ? undefined : json["id"],
    name: json["name"],
    description: json["description"],
    address: json["address"],
    city: json["city"],
    operatingHours: json["operating_hours"],
    image: json["image"],
    created: !exists(json, "created") ? undefined : new Date(json["created"]),
    modified: !exists(json, "modified")
      ? undefined
      : new Date(json["modified"]),
  };
}

export function StoreToJSON(value?: Store | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    name: value.name,
    description: value.description,
    address: value.address,
    city: value.city,
    operating_hours: value.operatingHours,
    image: value.image,
  };
}
