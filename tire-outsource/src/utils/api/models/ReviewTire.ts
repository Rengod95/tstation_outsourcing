/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TireManufacturer } from './TireManufacturer';
import {
    TireManufacturerFromJSON,
    TireManufacturerFromJSONTyped,
    TireManufacturerToJSON,
} from './TireManufacturer';
import type { TireSizesInner } from './TireSizesInner';
import {
    TireSizesInnerFromJSON,
    TireSizesInnerFromJSONTyped,
    TireSizesInnerToJSON,
} from './TireSizesInner';

/**
 * 
 * @export
 * @interface ReviewTire
 */
export interface ReviewTire {
    /**
     * 
     * @type {number}
     * @memberof ReviewTire
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof ReviewTire
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ReviewTire
     */
    description: string;
    /**
     * 
     * @type {TireManufacturer}
     * @memberof ReviewTire
     */
    manufacturer: TireManufacturer;
    /**
     * 
     * @type {string}
     * @memberof ReviewTire
     */
    modelName: string;
    /**
     * 
     * @type {number}
     * @memberof ReviewTire
     */
    marketPrice: number;
    /**
     * 
     * @type {number}
     * @memberof ReviewTire
     */
    salePrice: number;
    /**
     * 
     * @type {Array<TireSizesInner>}
     * @memberof ReviewTire
     */
    sizes: Array<TireSizesInner>;
    /**
     * 
     * @type {string}
     * @memberof ReviewTire
     */
    smartstoreUrl: string;
    /**
     * 
     * @type {Date}
     * @memberof ReviewTire
     */
    readonly created?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ReviewTire
     */
    readonly modified?: Date;
}

/**
 * Check if a given object implements the ReviewTire interface.
 */
export function instanceOfReviewTire(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "manufacturer" in value;
    isInstance = isInstance && "modelName" in value;
    isInstance = isInstance && "marketPrice" in value;
    isInstance = isInstance && "salePrice" in value;
    isInstance = isInstance && "sizes" in value;
    isInstance = isInstance && "smartstoreUrl" in value;

    return isInstance;
}

export function ReviewTireFromJSON(json: any): ReviewTire {
    return ReviewTireFromJSONTyped(json, false);
}

export function ReviewTireFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReviewTire {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'description': json['description'],
        'manufacturer': TireManufacturerFromJSON(json['manufacturer']),
        'modelName': json['model_name'],
        'marketPrice': json['market_price'],
        'salePrice': json['sale_price'],
        'sizes': ((json['sizes'] as Array<any>).map(TireSizesInnerFromJSON)),
        'smartstoreUrl': json['smartstore_url'],
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'modified': !exists(json, 'modified') ? undefined : (new Date(json['modified'])),
    };
}

export function ReviewTireToJSON(value?: ReviewTire | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'manufacturer': TireManufacturerToJSON(value.manufacturer),
        'model_name': value.modelName,
        'market_price': value.marketPrice,
        'sale_price': value.salePrice,
        'sizes': ((value.sizes as Array<any>).map(TireSizesInnerToJSON)),
        'smartstore_url': value.smartstoreUrl,
    };
}

