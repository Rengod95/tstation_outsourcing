/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CarTireSizesInner } from './CarTireSizesInner';
import {
    CarTireSizesInnerFromJSON,
    CarTireSizesInnerFromJSONTyped,
    CarTireSizesInnerToJSON,
} from './CarTireSizesInner';

/**
 * 
 * @export
 * @interface Car
 */
export interface Car {
    /**
     * 
     * @type {number}
     * @memberof Car
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof Car
     */
    manufacturerName: string;
    /**
     * 
     * @type {string}
     * @memberof Car
     */
    carName: string;
    /**
     * 
     * @type {Array<CarTireSizesInner>}
     * @memberof Car
     */
    tireSizes: Array<CarTireSizesInner>;
    /**
     * 
     * @type {Date}
     * @memberof Car
     */
    readonly created?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Car
     */
    readonly modified?: Date;
}

/**
 * Check if a given object implements the Car interface.
 */
export function instanceOfCar(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "manufacturerName" in value;
    isInstance = isInstance && "carName" in value;
    isInstance = isInstance && "tireSizes" in value;

    return isInstance;
}

export function CarFromJSON(json: any): Car {
    return CarFromJSONTyped(json, false);
}

export function CarFromJSONTyped(json: any, ignoreDiscriminator: boolean): Car {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'manufacturerName': json['manufacturer_name'],
        'carName': json['car_name'],
        'tireSizes': ((json['tire_sizes'] as Array<any>).map(CarTireSizesInnerFromJSON)),
        'created': !exists(json, 'created') ? undefined : (new Date(json['created'])),
        'modified': !exists(json, 'modified') ? undefined : (new Date(json['modified'])),
    };
}

export function CarToJSON(value?: Car | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'manufacturer_name': value.manufacturerName,
        'car_name': value.carName,
        'tire_sizes': ((value.tireSizes as Array<any>).map(CarTireSizesInnerToJSON)),
    };
}

